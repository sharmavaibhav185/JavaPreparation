Q1) When to use Vector and Purpose and drawbacks of Vector? Tell me the Real Time Scenario ?
Q2) When to use ArrayList and Purpose of ArrayList? Tell me the Real Time Scenario ?
Q3) Can you tell me the difference between vector and ArrayList ? 
Q4) Can you tell me the difference between vector and LinkedList ? 
Q5) Can you tell me the difference between ArrayList and LinkedList ? 
Q6) In Which Scenario, we can think about going for vector in the project ?
Q7) Tell me the usecases which makes you to think going for ArrayList ?
Q8) If you use ArrayList, What could be the problem may comes in the project?
Q9) If you use LinkedList, What could be the problem solves in the project?
Q10) We do already have Vector to store data, then What's the need of HashSet ?
Q11) What is the purpose of TreeSet and How it solves the problem of Vector ?
Q12) Can we use Vector in SingleThreaded Environment ? How performance of the application affects using Vector in SingleThreaded Environment ?
Q13) Why Vector is the best choice using in Multithreaded Environment ? How it affects the performance of the Application ?
Q14) ArrayList is Synchronized or non-synchronized ?
Q15) When to use LinkedList in the project ?
Q16) What is the problem TreeSet solves, in already available Collection ?
Q17) What is Hashtable ? What's the drawback of HashTable ?
Q18) Why HashMap, if we already have Hashtable ? What's the problem HashMap solves over HashTable ?
Q19) What is TreeMap ? What problems TreeMap solves over HashTable ?
Q20) What is the use of WeakHashMap ?
Q21) What's the drawback of HashSet ? How LinkedHashSet solves the problem over HashSet ?
Q22) What's the drawback of HashMap ? How LinkedHashMap solves the problem over HashMap ?
Q23) What is IdentityHashMap ? How it solves the problem of HashMap ?
Q24) What are the changes happenend in Collection Framework at Language level and API level java 1.5 version onwards ?
Q25) What is the need of Queue type collection ?
Q26) What's the purpose of EnumSet and EnumMap ?
Q27) What is the difference between EnumSet and EnumMap ?
Q28) What is NavigableSet and NavigableMap ?
Q29) What is vector ?
Q30) In which version it is defined ?
Q31) When we must use vector ?
Q32) Is Vector synchronized or not ?
Q33) Is Vector ordered collection or not ?
Q34) What is the data structure Vector follows or What is implemented data structure of Vector ?
Q35) What is the default capacity of Vector ?
Q36) What is the incremental capacity of Vector ?
Q37) What type of elements are allowed to store in Vector  ?
Q38) Is null allowed in Vector, if allowed how many ? 
Q39) In Which order elements are stored in Vector ?
Q40) In which order elements are retrived from Vector ?
Q41) When you are adding objects to the collection, Collection impicitly calling some methods on your object  and that method will be executed either from your class or from java.lang.Object class ?




1.PreparedStatement object is best suited for
   a.executing many queries multiple times with different inputs
   b.exeucting query only once.
ans.a

2.PreparedStament avoids the problem of 
 a.SQLInjection
 b.SQLRedundancy
ans.a

3.PreparedStatement uses _ approach to set the values
  a.setXXX()
  b.getXXX()
ans.a

4.PreparedStament and Statement are classes
   a.No
   b.Yes
ans.a

5.Statement is called _ or PreparedStatement
   a.parent
   b.child
ans.a

6.In preparedStatement the placeholders values starts from
   a.0
   b.1
ans.b

7.In which ojbect dynamic query without inputs be injected?
   a.Statement
   b.PreparedStatement
ans.b

8.To insert date object,which approach should we follow?
    a.Statement
    b.PreparedStatement
ans.b

9.IS DB pattern same for all the database
   a.yes
   b.no
ans.b

10.Can v convert the date object to String object
   a.yes
   b.no
ans.a

11.Date class is available in 
   a.java.lang
   b.java.util
   c.java.text

ans.b

12.Any type of Exception generated in JDBC code,will be of what type?
   a.SQLExcpetion
   b.sqlexception
   c.sQLException
ans.a

13.To generate PK,we use the approach of
   a.naturalcandidate key
   b.surrogatecandidate key
ans.b

14.SimpleDateFormat class is available in
     a.java.lang
     b.java.text
     c.java.util
ans.b

15.When we use PreparedStatement to insert the record,should we specify pk column if it is autogenerated
     a.no
     b.yes

ans.a

16.Does oracle db supports AI feature
       a.yes
       b.no
ans.b

17.To give the information of stream to set Blob information,what is the method we use?
       a.setFloat()
       b.setBinaryStream()
       c.setbinaryStream()
ans.b

18.Where should we close the resources used in the application
     a.inside try catch block
     b.inside try
     c.inside finally
ans.c

19.How wil u get the information of blob from the database
      a.using getBinaryStream()
      b.using getFloat()
      c.using getStream()

ans.a

20.Date format used by MySQLDBE is 
    a.dd-MM-YYYY
    b.YYYY-MM-dd
    c.YYYY-mm-DD
ans.b





Q2) Given:
public class Book {
   private String title;
   private String genre;
   public Book(String title, String genre){
        this.title = title; this.genre = genre;
   }

   //accessors not shown
}

and the following code:

List<Book> books = //code to create the list goes here

Comparator<Book> c1 =  (b1, b2)->b1.getGenre().compareTo(b2.getGenre()); //1
books.stream().sorted(c1.thenComparing(Book::getTitle)); //2
System.out.println(books);

Identify the correct statements.

Please select 1 option

a) It will print the list that is sorted by genre and then sorted by title within.
b) It will print the list that is sorted by title and then sorted by genre within.
c) It will print the list as it is.
d) Code will fail to compile because of code at //1.
e) Code will fail to compile because of code at //2.
Q3) Identify the correct statements about the following code:-

List<Integer> values = Arrays.asList(2, 4, 6, 9); //1
Predicate<Integer> check = (Integer i) -> {
    System.out.println("Checking");
    return i == 4; //2
};
Predicate even = (Integer i)-> i%2==0;  //3
values.stream().filter(check).filter(even).count(); //4

Please select 1 option

a) It will not compile because of code at //1.
b) It will not compile because of code at //2.
c) It will not compile because of code at //3.
d) It will not compile because of code at //4.
e) It will compile fine and print Checking four times.
f) It will compile fine and print Checking three times.
g) It will compile fine and print Checking one time.
h) It will compile fine but will print nothing.
Q4) Given:          
var nums = List.of(1, 2, 3, 4, 5, 6, 7).stream();  

Predicate<Integer> p = //a predicate goes here 

Optional<Integer> value = nums.filter(p).reduce((a, b)->a+b);       
value.ifPresent(System.out::println); 

Please select 2 options

a) setting p to a->a<0; will produce no output.
b) setting p to a->a<0; will generate a NullPointerException.
c) setting p to a->a<0; will generate a NoSuchElementException.
d) setting p to a->a%2==0; will produce 12.
e) setting p to a->a%2==0; will produce 16.
Q5) What will the following code most likely print when compiled and run? 
List<String> names = Arrays.asList("greg", "dave", "don", "ed", "fred" ); 
Map<Integer, Long> data = names.stream().collect(Collectors.groupingBy(  
                String::length,                             
                Collectors.counting()) ); 
System.out.println(data.values()); 

Please select 1 option

a) [1, 1, 3]
b) [1, 2, 3]
c) [2, 3, 4]
d) ["greg", "dave", "don", "ed", "fred"]
e) The data variable should be declared of type Map<Integer, Integer> for the code to compile.
f) The data variable should be declared of type Map<Long, Long> for the code to compile.